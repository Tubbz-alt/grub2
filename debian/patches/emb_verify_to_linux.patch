Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 grub2 (2.02+dfsg1+deepin2-1deepin1) UNRELEASED; urgency=medium
 .
   * Non-maintainer upload.
   * Rebuild.
Author: Zhang Yueqian <zhangyueqian@deepin.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-12-13

--- grub2-2.02+dfsg1+deepin2.orig/grub-core/loader/i386/linux.c
+++ grub2-2.02+dfsg1+deepin2/grub-core/loader/i386/linux.c
@@ -36,6 +36,7 @@
 #include <grub/lib/cmdline.h>
 #include <grub/linux.h>
 #include <grub/machine/kernel.h>
+#include <grub/time.h>
 
 GRUB_MOD_LICENSE ("GPLv3+");
 
@@ -700,6 +701,10 @@ grub_cmd_linux (grub_command_t cmd __att
   int relocatable;
   grub_uint64_t preferred_address = GRUB_LINUX_BZIMAGE_ADDR;
 
+  // for verify
+  int fnlen = grbu_strlen(argv[0]);
+  char *verify_args[2] = { NULL, NULL };
+
   grub_dl_ref (my_mod);
 
 #ifdef GRUB_MACHINE_EFI
@@ -745,6 +750,35 @@ grub_cmd_linux (grub_command_t cmd __att
   if (! file)
     goto fail;
 
+  // verify sig
+  mod = grub_dl_load("verify");
+  if (mod)
+    {
+      grub_dprintf ("linux", "Found module verify!\n");
+      grub_dl_ref (mod);
+      verify_detach_cmd = grub_command_find ("verify_detach");
+
+      fnlen = grub_strlen (argv[0]);
+      verify_args[0] = argv[0];
+      verify_args[1] = grub_malloc (fnlen+4); // filename + .sig
+      grub_strcpy (verify_args[1], argv[0]);
+      grub_strcat (verify_args[1], ".sig");
+
+      if (verify_detach_cmd)
+	{
+	  grub_dprintf("linux", "Found command verify_detach!\n");
+	  (verify_detach_cmd->func) (verify_detach_cmd, 2, verify_args);
+	  if (grub_errorno == GRUB_ERR_NONE)
+	    {
+	      grub_dprintf ("linux", "verify success!\n");
+	    }
+	  else
+	    grub_dprintf ("linux", "Error: %d\n", (int) grub_errorno);
+	}
+    }
+
+  grub_millisleep (30000);
+
   if (grub_file_read (file, &lh, sizeof (lh)) != sizeof (lh))
     {
       if (!grub_errno)
