Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 grub2 (2.02+dfsg1+deepin2-1deepin3) unstable; urgency=medium
 .
   * Add wrap-line.
Author: Zhang Yueqian <zhangyueqian@deepin.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-12-13

--- grub2-2.02+dfsg1+deepin2.orig/grub-core/kern/file.c
+++ grub2-2.02+dfsg1+deepin2/grub-core/kern/file.c
@@ -184,15 +184,6 @@ grub_file_read (grub_file_t file, void *
   file->read_hook = read_hook;
   file->read_hook_data = read_hook_data;
 
-  // buf is char*
-
-  for (int i=0; i<16; i++)
-    grub_dprintf ("file", "DATA HEAD: %X, DATA_END: %X\n",
-		  (unsigned int)((grub_int32_t *)buf)[i],
-		  (unsigned int)((grub_int32_t *)buf)[len-16+i]);
-
-  grub_millisleep (30000);
-
   if (res > 0)
     file->offset += res;
 
--- grub2-2.02+dfsg1+deepin2.orig/grub-core/loader/i386/linux.c
+++ grub2-2.02+dfsg1+deepin2/grub-core/loader/i386/linux.c
@@ -700,6 +700,8 @@ grub_cmd_linux (grub_command_t cmd __att
   int relocatable;
   grub_uint64_t preferred_address = GRUB_LINUX_BZIMAGE_ADDR;
 
+  // grub_uint32_t* read_buf;
+
   grub_dl_ref (my_mod);
 
 #ifdef GRUB_MACHINE_EFI
@@ -758,6 +760,10 @@ grub_cmd_linux (grub_command_t cmd __att
   if (! file)
     goto fail;
 
+  // verify file to be loaded
+  grub_dprintf("linux", "%s size is: %d", argv[0], file->size);
+  // read_buf = grub_malloc ();
+
   if (grub_file_read (file, &lh, sizeof (lh)) != sizeof (lh))
     {
       if (!grub_errno)
