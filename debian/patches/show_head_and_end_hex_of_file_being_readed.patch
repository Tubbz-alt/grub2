Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 grub2 (2.02+dfsg1+deepin2-1deepin1) UNRELEASED; urgency=medium
 .
   * Non-maintainer upload.
   * Rebuild.
Author: Zhang Yueqian <zhangyueqian@deepin.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-12-12

--- grub2-2.02+dfsg1+deepin2.orig/grub-core/kern/file.c
+++ grub2-2.02+dfsg1+deepin2/grub-core/kern/file.c
@@ -25,6 +25,7 @@
 #include <grub/fs.h>
 #include <grub/device.h>
 #include <grub/i18n.h>
+#include <grub/time.h>
 
 void (*EXPORT_VAR (grub_grubnet_fini)) (void);
 
@@ -123,7 +124,7 @@ grub_file_open (const char *name)
       }
   if (!file)
     grub_file_close (last_file);
-    
+
   grub_memcpy (grub_file_filters_enabled, grub_file_filters_all,
 	       sizeof (grub_file_filters_enabled));
 
@@ -182,6 +183,19 @@ grub_file_read (grub_file_t file, void *
   res = (file->fs->read) (file, buf, len);
   file->read_hook = read_hook;
   file->read_hook_data = read_hook_data;
+
+  // buf is char*
+  char* cbuf = (char *)buf;
+  char begin_buf[16] = {NULL}, end_buf[16] = {NULL};
+  for (int i=0; i<16; i++)
+    {
+      begin_buf[i] = cbuf[i];
+      end_buf[i] = cbuf[len-16+i];
+    }
+  grub_dprintf ("DATA HEAD: %x, DATA_END: %x", begin_buf, end_buf);
+
+  grub_millisleep (30000);
+
   if (res > 0)
     file->offset += res;
 
@@ -212,9 +226,9 @@ grub_file_seek (grub_file_t file, grub_o
 		  N_("attempt to seek outside of the file"));
       return -1;
     }
-  
+
   old = file->offset;
   file->offset = offset;
-    
+
   return old;
 }
--- grub2-2.02+dfsg1+deepin2.orig/grub-core/loader/i386/linux.c
+++ grub2-2.02+dfsg1+deepin2/grub-core/loader/i386/linux.c
@@ -336,7 +336,7 @@ grub_linux_setup_video (struct linux_ker
 	  params->lfb_size >>= 16;
 	  params->have_vga = GRUB_VIDEO_LINUX_TYPE_VESA;
 	  break;
-	
+
 	case GRUB_VIDEO_DRIVER_EFI_UGA:
 	case GRUB_VIDEO_DRIVER_EFI_GOP:
 	  params->have_vga = GRUB_VIDEO_LINUX_TYPE_EFIFB;
@@ -634,9 +634,9 @@ grub_linux_boot (void)
 					 &efi_desc_size, &efi_desc_version);
     if (err)
       return err;
-    
+
     /* Note that no boot services are available from here.  */
-    efi_mmap_target = ctx.real_mode_target 
+    efi_mmap_target = ctx.real_mode_target
       + ((grub_uint8_t *) efi_mmap_buf - (grub_uint8_t *) real_mode_mem);
     /* Pass EFI parameters.  */
     if (grub_le_to_cpu16 (ctx.params->version) >= 0x0208)
@@ -713,7 +713,11 @@ grub_cmd_linux (grub_command_t cmd __att
 
       grub_dprintf ("linux", "Secure Boot enabled: trying linuxefi\n");
 
+      /*
+       * temperaly disable linuxefi,
+       * make grub verify image directly.
       mod = grub_dl_load ("linuxefi");
+
       if (mod)
 	{
 	  grub_dl_ref (mod);
@@ -732,6 +736,7 @@ grub_cmd_linux (grub_command_t cmd __att
 	      goto fail;
 	    }
 	}
+      */
     }
 #endif
 
@@ -819,7 +824,7 @@ grub_cmd_linux (grub_command_t cmd __att
       align = 0;
       relocatable = 0;
     }
-    
+
   if (grub_le_to_cpu16 (lh.version) >= 0x020a)
     {
       min_align = lh.min_alignment;
